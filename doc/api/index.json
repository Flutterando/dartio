[{"name":"dartion","qualifiedName":"dartion","href":"dartion/dartion-library.html","type":"library","overriddenDepth":0,"packageName":"dartion","desc":""},{"name":"Config","qualifiedName":"dartion.Config","href":"dartion/Config-class.html","type":"class","overriddenDepth":0,"packageName":"dartion","desc":"Class that defines the main parameters of the database, such as","enclosedBy":{"name":"dartion","type":"library","href":"dartion/dartion-library.html"}},{"name":"Config","qualifiedName":"dartion.Config.Config","href":"dartion/Config/Config.html","type":"constructor","overriddenDepth":0,"packageName":"dartion","desc":"Class constructor to create the server. Has some default configurations\nbut it is advised to create a new instance using the factory so you can\nimplement the configuration set up in your config.yaml file","enclosedBy":{"name":"Config","type":"class","href":"dartion/Config-class.html"}},{"name":"auth","qualifiedName":"dartion.Config.auth","href":"dartion/Config/auth.html","type":"property","overriddenDepth":0,"packageName":"dartion","desc":"AuthService object","enclosedBy":{"name":"Config","type":"class","href":"dartion/Config-class.html"}},{"name":"db","qualifiedName":"dartion.Config.db","href":"dartion/Config/db.html","type":"property","overriddenDepth":0,"packageName":"dartion","desc":"IDatabase object","enclosedBy":{"name":"Config","type":"class","href":"dartion/Config-class.html"}},{"name":"Config.fromYaml","qualifiedName":"dartion.Config.fromYaml","href":"dartion/Config/Config.fromYaml.html","type":"constructor","overriddenDepth":0,"packageName":"dartion","desc":"Factory constructor to build your database configuration using a provided\nconfig.yaml file\nThe config.yaml must have a layout like this one:","enclosedBy":{"name":"Config","type":"class","href":"dartion/Config-class.html"}},{"name":"host","qualifiedName":"dartion.Config.host","href":"dartion/Config/host.html","type":"property","overriddenDepth":0,"packageName":"dartion","desc":"Host's IP address","enclosedBy":{"name":"Config","type":"class","href":"dartion/Config-class.html"}},{"name":"name","qualifiedName":"dartion.Config.name","href":"dartion/Config/name.html","type":"property","overriddenDepth":0,"packageName":"dartion","desc":"Database name","enclosedBy":{"name":"Config","type":"class","href":"dartion/Config-class.html"}},{"name":"port","qualifiedName":"dartion.Config.port","href":"dartion/Config/port.html","type":"property","overriddenDepth":0,"packageName":"dartion","desc":"The hosts port for database access","enclosedBy":{"name":"Config","type":"class","href":"dartion/Config-class.html"}},{"name":"statics","qualifiedName":"dartion.Config.statics","href":"dartion/Config/statics.html","type":"property","overriddenDepth":0,"packageName":"dartion","desc":"Database statics, default to Public","enclosedBy":{"name":"Config","type":"class","href":"dartion/Config-class.html"}},{"name":"storage","qualifiedName":"dartion.Config.storage","href":"dartion/Config/storage.html","type":"property","overriddenDepth":0,"packageName":"dartion","desc":"Storage object","enclosedBy":{"name":"Config","type":"class","href":"dartion/Config-class.html"}},{"name":"ConfigRepository","qualifiedName":"dartion.ConfigRepository","href":"dartion/ConfigRepository-class.html","type":"class","overriddenDepth":0,"packageName":"dartion","desc":"Class used to configure the database server through the yaml file\ndefined in it's method getConfig parameter path (String)","enclosedBy":{"name":"dartion","type":"library","href":"dartion/dartion-library.html"}},{"name":"ConfigRepository","qualifiedName":"dartion.ConfigRepository.ConfigRepository","href":"dartion/ConfigRepository/ConfigRepository.html","type":"constructor","overriddenDepth":0,"packageName":"dartion","desc":"","enclosedBy":{"name":"ConfigRepository","type":"class","href":"dartion/ConfigRepository-class.html"}},{"name":"getConfig","qualifiedName":"dartion.ConfigRepository.getConfig","href":"dartion/ConfigRepository/getConfig.html","type":"method","overriddenDepth":1,"packageName":"dartion","desc":"Gets the database configuration through the yaml file defined in it's\nparameter path (String)","enclosedBy":{"name":"ConfigRepository","type":"class","href":"dartion/ConfigRepository-class.html"}},{"name":"DartIOServer","qualifiedName":"dartion.DartIOServer","href":"dartion/DartIOServer-class.html","type":"class","overriddenDepth":0,"packageName":"dartion","desc":"Class that defines the configuration and http server instance","enclosedBy":{"name":"dartion","type":"library","href":"dartion/dartion-library.html"}},{"name":"DartIOServer","qualifiedName":"dartion.DartIOServer.DartIOServer","href":"dartion/DartIOServer/DartIOServer.html","type":"constructor","overriddenDepth":0,"packageName":"dartion","desc":"DartIoServer construtor class. Requires a config.yaml file.","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"checkFile","qualifiedName":"dartion.DartIOServer.checkFile","href":"dartion/DartIOServer/checkFile.html","type":"method","overriddenDepth":0,"packageName":"dartion","desc":"Method for checking a file. Uses the parameter request, but it's NOT a\nShelf package request. It uses a dynamic parameter to get a\nuri.pathSegments","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"config","qualifiedName":"dartion.DartIOServer.config","href":"dartion/DartIOServer/config.html","type":"property","overriddenDepth":0,"packageName":"dartion","desc":"Config class - defines database configuration","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"getInstance","qualifiedName":"dartion.DartIOServer.getInstance","href":"dartion/DartIOServer/getInstance.html","type":"method","overriddenDepth":0,"packageName":"dartion","desc":"Getter that uses the config.yaml data to return a DartIOServer instance","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"getSegment","qualifiedName":"dartion.DartIOServer.getSegment","href":"dartion/DartIOServer/getSegment.html","type":"method","overriddenDepth":0,"packageName":"dartion","desc":"Gets a segment of the requested url. Requires a http Request (from the\nShelf package).","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"getSlash","qualifiedName":"dartion.DartIOServer.getSlash","href":"dartion/DartIOServer/getSlash.html","type":"property","overriddenDepth":0,"packageName":"dartion","desc":"Getter used to change \"\" to \"/\" in paths if Windows is the platform.","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"handleAuth","qualifiedName":"dartion.DartIOServer.handleAuth","href":"dartion/DartIOServer/handleAuth.html","type":"method","overriddenDepth":0,"packageName":"dartion","desc":"Handles Authorizations. Requires a http Request (from the Shelf package).\nThe user must use an email and a password, and if the response is ok it\nreturns an user, a token and an exp fields.","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"handleDelete","qualifiedName":"dartion.DartIOServer.handleDelete","href":"dartion/DartIOServer/handleDelete.html","type":"method","overriddenDepth":0,"packageName":"dartion","desc":"Handles Delete http requisitions. Requires a http Request (from the Shelf\npackage).","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"handleGet","qualifiedName":"dartion.DartIOServer.handleGet","href":"dartion/DartIOServer/handleGet.html","type":"method","overriddenDepth":0,"packageName":"dartion","desc":"Handles Get http requisitions. Requires a http Request (from the Shelf\npackage).","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"handlePatch","qualifiedName":"dartion.DartIOServer.handlePatch","href":"dartion/DartIOServer/handlePatch.html","type":"method","overriddenDepth":0,"packageName":"dartion","desc":"Handles Patch http requisitions. Requires a http Request (from the Shelf\npackage).","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"handlePost","qualifiedName":"dartion.DartIOServer.handlePost","href":"dartion/DartIOServer/handlePost.html","type":"method","overriddenDepth":0,"packageName":"dartion","desc":"Handles Post http requisitions. Requires a http Request (from the Shelf\npackage).","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"handlePut","qualifiedName":"dartion.DartIOServer.handlePut","href":"dartion/DartIOServer/handlePut.html","type":"method","overriddenDepth":0,"packageName":"dartion","desc":"Handles Put http requisitions. Requires a http Request (from the Shelf\npackage).","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"handleRequest","qualifiedName":"dartion.DartIOServer.handleRequest","href":"dartion/DartIOServer/handleRequest.html","type":"method","overriddenDepth":0,"packageName":"dartion","desc":"Main method to handle the Requests. Requires a http Request (from the\nShelf package) and based on the method requested calls the appropriate\nfunction.","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"handleUpload","qualifiedName":"dartion.DartIOServer.handleUpload","href":"dartion/DartIOServer/handleUpload.html","type":"method","overriddenDepth":0,"packageName":"dartion","desc":"Handles Uploads. Requires a http Request (from the Shelf package).","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"middlewareJwt","qualifiedName":"dartion.DartIOServer.middlewareJwt","href":"dartion/DartIOServer/middlewareJwt.html","type":"method","overriddenDepth":0,"packageName":"dartion","desc":"Contains the logic used to validate a Jason Web Token","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"start","qualifiedName":"dartion.DartIOServer.start","href":"dartion/DartIOServer/start.html","type":"method","overriddenDepth":0,"packageName":"dartion","desc":"Initiates the server using the config.db.init, creating a handler\n(middleware) for the requests and starting a shelf server on the localhost","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"uuid","qualifiedName":"dartion.DartIOServer.uuid","href":"dartion/DartIOServer/uuid.html","type":"property","overriddenDepth":0,"packageName":"dartion","desc":"Uuid object from the package Uuid","enclosedBy":{"name":"DartIOServer","type":"class","href":"dartion/DartIOServer-class.html"}},{"name":"IConfigRepository","qualifiedName":"dartion.IConfigRepository","href":"dartion/IConfigRepository-class.html","type":"class","overriddenDepth":0,"packageName":"dartion","desc":"Interface class to configure the database server through the yaml file\ndefined in it's method getConfig parameter path (String)","enclosedBy":{"name":"dartion","type":"library","href":"dartion/dartion-library.html"}},{"name":"IConfigRepository","qualifiedName":"dartion.IConfigRepository.IConfigRepository","href":"dartion/IConfigRepository/IConfigRepository.html","type":"constructor","overriddenDepth":0,"packageName":"dartion","desc":"","enclosedBy":{"name":"IConfigRepository","type":"class","href":"dartion/IConfigRepository-class.html"}},{"name":"getConfig","qualifiedName":"dartion.IConfigRepository.getConfig","href":"dartion/IConfigRepository/getConfig.html","type":"method","overriddenDepth":0,"packageName":"dartion","desc":"Gets the database configuration through the yaml file defined in it's\nparameter path (String)","enclosedBy":{"name":"IConfigRepository","type":"class","href":"dartion/IConfigRepository-class.html"}}]
